// Core Utility Styles
// Common utility classes and helpers

// ============================================
// Display Utilities
// ============================================

// Properly hide things
.hidden, [hidden] {
  display: none !important;
}

.disabled,
[disabled],
:disabled {
  cursor: not-allowed !important;
  pointer-events: all !important;

  // Disable pointer events on all children inside disabled buttons and links
  // This helps fix event bubbling issues for click listeners
  * {
    pointer-events: none !important;
  }
}

// Prevent pointer events on all children inside buttons and links
// This helps fix event bubbling issues for click listeners
button *, a * {
  pointer-events: none !important;
}

// ============================================
// Filter Utilities
// ============================================

// Filter white
.filter-white {
  filter: brightness(0) invert(1);
}

// Filter black
.filter-black {
  filter: brightness(0) invert(1) hue-rotate(180deg);
}

// ============================================
// Adaptive Theming
// ============================================

// Mixin for SVG color inheritance
@mixin svg-currentcolor {
  svg {
    fill: currentColor;
    path, g, polygon, rect, circle { fill: currentColor; }
  }
}

// Filter adaptive - automatically uses theme body color
.filter-adaptive {
  color: var(--bs-body-color);
  @include svg-currentcolor;
}

// Filter adaptive inverse - dark in light mode, light in dark mode
.filter-adaptive-inverse {
  color: var(--bs-dark);
  @include svg-currentcolor;

  [data-bs-theme="dark"] & {
    color: var(--bs-light);
  }
}

// ============================================
// Opacity Utilities
// ============================================
@for $i from 0 through 10 {
  .opacity-#{$i * 10} {
    opacity: $i * 0.1 !important;
  }
}
